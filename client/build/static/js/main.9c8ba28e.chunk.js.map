{"version":3,"sources":["images/product.jpg","_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/utils/ImageSlider.js","components/views/ProductPage/Sections/CheckBox.js","components/views/ProductPage/Sections/RadioBox.js","components/views/ProductPage/Sections/SearchFeature.js","components/views/ProductPage/Sections/Datas.js","components/views/ProductPage/ProductPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/utils/FileUpload.js","components/views/UploadProductPage/UploadProductPage.js","components/views/DetailProductPage/Sections/ProductImage.js","components/views/DetailProductPage/Sections/ProductInfo.js","components/views/DetailProductPage/Sections/ProductReview.js","components/views/DetailProductPage/DetailProductPage.js","components/views/CartPage/Sections/UserCardBlock.js","components/views/CartPage/CartPage.js","components/views/LandingPage/LandingPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["module","exports","auth","console","log","localStorage","getItem","type","payload","axios","get","params","userId","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","ImageSlider","autoplay","images","map","image","index","key","style","width","maxHeight","src","CheckBox","useState","Checked","setChecked","list","value","Fragment","onChange","currentIndex","indexOf","newChecked","splice","handleFilters","handleToggle","_id","checked","name","Collapse","Panel","RadioBox","Value","setValue","Group","event","target","Search","Input","SearchFeature","SearchTerm","setSearchTerm","placeholder","currentTarget","refreshFunction","brand","age","price","ProductPage","Products","setProducts","Skip","setSkip","Limit","PostSize","setPostSize","function","Filters","setFilters","getProducts","skip","limit","body","post","success","loadMore","productInfo","postSize","alert","renderCards","product","lg","md","xs","cover","href","title","description","filters","category","newFilters","priceValues","array","parseInt","handlePrice","showFilterResults","margin","gutter","size","headStyle","backgroundColor","defaultActiveKey","header","display","justifyContent","newSearchTerm","searchTerm","onClick","Title","Typography","withRouter","rememberMeChecked","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialId","initialValues","id","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","window","setItem","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","className","level","Item","prefix","color","onBlur","fontSize","border","padding","borderRadius","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","Dog_breed_all","Dog_age_all","Dog_weight_all","RegisterPage","Dog_breed","setDog_breed","Dog_breedChangeHandler","Dog_age","setDog_age","Dog_ageChangeHandler","Dog_weight","setDog_weight","Dog_weightChangeHandler","confirmPassword","email","address","phone","dog_breed","dog_age","dog_weight","oneOf","registerUser","errmsg","label","hasFeedback","validateStatus","item","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","mode","logoutHandler","status","userData","paddingBottom","marginRight","marginBottom","NavBar","visible","setVisible","position","zIndex","placement","closable","onClose","Footer","height","flexDirection","alignItems","FileUpload","Images","setImages","onDrop","files","formData","FormData","append","filePath","getRootProps","getInputProps","overflowX","newImages","deleteHandler","TextArea","Checkbox","Brands","Ages","Functions","UploadProductPage","setTitle","Description","setDescription","Price","setPrice","Brand","setBrand","Age","setAge","isChecked","setisChecked","Set","checkedItems","setcheckedItems","checkedItemHandler","box","add","has","delete","maxWidth","textAlign","onSubmitCapture","preventDefault","writer","e","parentNode","checkHandler","ProductImage","detail","length","original","thumbnail","items","ProductInfo","fun","i","bordered","productId","addToCart","ProductReview","defaultValue","rate","author","content","datetime","moment","format","fromNow","DetailProductPage","match","Product","setProduct","Review","setReview","totalPage","minIndex","maxIndex","current","State","setState","orientation","review","defaultCurrent","pageSize","total","page","bottom","UserCardBlock","renderCartImage","products","alt","quantity","CartPage","Total","setTotal","ShowTotal","setShowTotal","cartItems","cart","forEach","userCart","cartItem","productDetail","getCartItems","calculateTotal","cartDetail","removeCartItem","marginTop","LandingPage","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","defaults","xsrfCookieName","xsrfHeaderName","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c8ba28e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/product.36f3ce8b.jpg\";","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\n// export function auth(){\n//     const request = axios.get(`${USER_SERVER}/auth`)\n//     .then(response => response.data);\n\n//     return {\n//         type: AUTH_USER,\n//         payload: request\n//     }\n// }\n\n// export function logoutUser(){\n//     const request = axios.get(`${USER_SERVER}/logout`)\n//     .then(response => response.data);\n\n//     return {\n//         type: LOGOUT_USER,\n//         payload: request\n//     }\n// }\nexport function auth(){\n    console.log(localStorage.getItem('userId'))\n        const request = axios.get(`${USER_SERVER}/auth`, {params: {userId: localStorage.getItem('userId')}})\n        .then(response => response.data);\n    \n        return {\n            type: AUTH_USER,\n            payload: request\n        }\n    }\n    \n    export function logoutUser(){\n        const request = axios.get(`${USER_SERVER}/logout`, {params: {userId: localStorage.getItem('userId')}})\n        .then(response => response.data);\n    \n        return {\n            type: LOGOUT_USER,\n            payload: request\n        }\n    }\n    \n\nexport function addToCart(id){\n    let body = {\n        productId: id\n    }\n\n    const request = axios.post(`${USER_SERVER}/addToCart`, body)\n        .then(response => response.data);\n\n    return {\n        type: ADD_TO_CART,\n        payload: request\n    }\n}\n\n\nexport function getCartItems(cartItems, userCart){\n\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`)\n        .then(response => {\n\n            //cartItem 들에 해당하는 정보들을 \n            //product collection에서 가져온 후\n            // Quantity 정보를 넣어준다.\n\n            userCart.forEach(cartItem => {\n                response.data.forEach((productDetail, index) => {\n                    if(cartItem.id === productDetail._id) {\n                        \n                        response.data[index].quantity = cartItem.quantity\n                        console.log(\"response.data\", response.data)\n                    }\n                })\n            })        \n        return response.data;\n    });\n\n    return {\n        type: GET_CART_ITEMS,\n        payload: request\n    }\n}\n\nexport function removeCartItem(productId) {\n\n    const request = axios.get(`/api/users/removeFromCart?id=${productId}`)\n        .then(response => {\n            //productInfo, cart 정보 > CartDetail\n            response.data.cart.forEach(item => {\n                response.data.productInfo.forEach((product, index) => {\n                    if (item.id === product._id) {\n                        response.data.productInfo[index].quantity = item.quantity\n                    }\n\n                })\n            })\n            return response.data;\n        });\n\n    return {\n        type: REMOVE_CART_ITEM,\n        payload: request\n    }\n}","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\nexport const ADD_TO_CART = 'add_to_cart';\nexport const GET_CART_ITEMS = 'get_cart_items';\nexport const REMOVE_CART_ITEM = 'remove_cart_item';\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) { // 일반사용자\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from 'react'\nimport {Carousel} from 'antd';\n\nfunction ImageSlider(props) {\n  return (\n    <div>\n        <Carousel autoplay>\n            {props.images.map((image, index) => (\n                <div key={index} > \n                \n                    <img style={{ width: '100%', maxHeight: '150px'}}\n                    src={ `http://localhost:5000/${image}` } />\n\n                </div>\n            ))}\n      </Carousel>\n    </div>\n  )\n}\n\nexport default ImageSlider","import React, { useState } from 'react'\nimport { Collapse, Checkbox } from 'antd';\n\n\n//const { Panel } = Collapse;\n\nfunction CheckBox(props) { //continents를 list로 넣어줌\n\n  const [Checked, setChecked] = useState([]) //체크하면 해당하는 숫자가 들어감\n\n  const handleToggle = (value) => {\n    //누른 것의 index구하고\n    const currentIndex = Checked.indexOf(value) \n\n    //전체 Checked된 State에서 현재 누른 Checkbox가 이미 있다면\n\n    const newChecked = [...Checked]\n    \n    //없으면 State에 넣어준다. \n    if(currentIndex === -1) {//-1이면 value 가 없는 거\n      newChecked.push(value)\n    \n    // 뺴주고\n    } else {\n      newChecked.splice(currentIndex, 1)\n    }\n\n    setChecked(newChecked) //newChecked로 바뀜\n    props.handleFilters(newChecked)// 부모 폴더에 전달\n\n  }\n\n  const renderCheckboxLists = () => props.list && props.list.map((value, index) => (\n    <React.Fragment key={index} >\n      <Checkbox onChange={() => handleToggle(value._id)} \n          checked={Checked.indexOf(value._id) === -1 ? false : true} />\n        <span>{value.name}</span>\n    </React.Fragment>\n  ))\n\n  return (\n    <div>\n        {renderCheckboxLists()}      \n    </div>\n  )\n}\n\nexport default CheckBox","import React, { useState } from 'react'\nimport { Collapse, Radio } from 'antd';\n\nconst { Panel } = Collapse;\n\n\nfunction RadioBox(props) {\n\n  const [Value, setValue] = useState(0)\n\n  const rederRadioBox = () => (\n    props.list && props.list.map(value => (\n\n      <Radio key={value._id} value={value._id}> {value.name}\n\n      </Radio>\n\n    ))\n  )\n\n  const handleChange = (event) => {\n    setValue(event.target.value)\n    props.handleFilters(event.target.value)\n\n  }\n\n  return (\n    <div>\n      \n\n          <Radio.Group onChange={handleChange} value={Value}>\n            {rederRadioBox()}\n          </Radio.Group>\n          \n\n        \n    </div>\n  )\n}\n\nexport default RadioBox","import React, {useState} from 'react'\nimport { Input} from 'antd';\n\nconst { Search } = Input;\n\nfunction SearchFeature(props) {\n  \n\n    const [SearchTerm, setSearchTerm] = useState(\"\")\n\n    const searchHandler = (event) => {\n        setSearchTerm(event.currentTarget.value)\n        props.refreshFunction(event.currentTarget.value)\n    }\n  \n  \n    return (\n    <div>\n\n    <Search\n        placeholder=\"input search text\"\n        onChange={searchHandler}\n        style={{ width: 200}}\n        value={SearchTerm} //value 바뀌면서 값 달라짐\n\n        />\n\n    </div>\n  )\n}\n\nexport default SearchFeature","\n// 브랜드: NOW, 로얄캐닌, ANF, 오리젠, 네츄럴코어, 마이펫닥터, 아카나, 하림펫푸드, 내추럴발란스\n// 급여대상: 어덜트, 퍼피, 대형견, 시니어, 임신/수유, + 전연령견용\n// 기능: 다이어트/중성화, 인도어, 저알러지, 피부/털개선, 눈물개선/눈건강, 비뇨계, 뼈/관절강화, 퍼포먼스\n\n//브랜드 정의\nconst brand = [\n    { \"_id\": 1, \"name\": \"NOW\" }, \n    { \"_id\": 2, \"name\": \"로얄캐닌\" },\n    { \"_id\": 3, \"name\": \"ANF\" }, \n    { \"_id\": 4, \"name\": \"오리젠\" },\n    { \"_id\": 5, \"name\": \"네츄럴코어\" }, \n    { \"_id\": 6, \"name\": \"마이펫닥터\" },\n    { \"_id\": 7, \"name\": \"아카나\" }, \n    { \"_id\": 8, \"name\": \"하림펫푸드\" },\n    { \"_id\": 9, \"name\": \"내추럴발란스\" }, \n    { \"_id\": 10, \"name\": \"듀먼\" }\n]\n\n//급여대상 \nconst age = [\n    { \"_id\": 1, \"name\": \"퍼피\" },\n    { \"_id\": 2, \"name\": \"어덜트\" },    \n    { \"_id\": 3, \"name\": \"시니어\" },\n    { \"_id\": 4, \"name\": \"대형견\" },    \n    { \"_id\": 5, \"name\": \"임신/수유\" },\n    { \"_id\": 6, \"name\": \"전연령견\" }\n]\n\n//가격   \nconst price = [\n    {\n        \"_id\" : 0,\n        \"name\" : \"Any\",\n        \"array\" : []\n    },\n    {\n        \"_id\" : 1,\n        \"name\" : \"10,000원 이하\",\n        \"array\" : [0, 10000]\n    },\n    {\n        \"_id\" : 2,\n        \"name\" : \"10,000원-20,000원\",\n        \"array\" : [10000, 20000]\n    },\n    {\n        \"_id\" : 3,\n        \"name\" : \"20,000원-40,000원\",\n        \"array\" : [20000, 40000]\n    },\n    {\n        \"_id\" : 4,\n        \"name\" : \"40,000원-60,000원\",\n        \"array\" : [40000, 60000]\n    },\n    {\n        \"_id\" : 5,\n        \"name\" : \"60,000원 이상\",\n        \"array\" : [60000, 150000000]\n    }\n]\n\nexport {\n    brand,\n    age,\n    price\n}","import React, { useEffect, useState } from 'react'\nimport axios from \"axios\"; \nimport { Col, Card, Row, Carousel,Collapse } from 'antd';\nimport Meta from 'antd/lib/card/Meta'\nimport ImageSlider from '../../utils/ImageSlider';\nimport Checkbox from './Sections/CheckBox';\nimport Radiobox from './Sections/RadioBox';\nimport SearchFeature from './Sections/SearchFeature';\nimport { brand, age, price } from './Sections/Datas';\nconst { Panel } = Collapse;\n\nfunction ProductPage() {\n\n    const [Products, setProducts] = useState([]) //db에서 상품정보 가져오기\n    const [Skip, setSkip] = useState(0) \n    const [Limit, setLimit] = useState(8)\n    const [PostSize, setPostSize] = useState(0)\n    const [Filters, setFilters] = useState({\n        brand: [],\n        age: [],\n        function: []\n    })\n    const [SearchTerm, setSearchTerm] = useState(\"\")\n\n\n\n\n    useEffect(() => {\n\n        let body = {\n            skip: Skip, //처음부터\n            limit: Limit //8개까지\n        }\n        \n        getProducts(body)\n        \n    }, [])\n\n    const getProducts = (body) => {\n        axios.post('/api/product/products', body)\n            .then(response => {\n                if(response.data.success) {\n                    //console.log(response.data)  \n                    if(body.loadMore) { //8개 가져오고 그뒤에 또 가져옴\n                        setProducts([...Products,...response.data.productInfo]) //전체 products에다가 추가\n                    } else{\n                        setProducts(response.data.productInfo)\n                    }                  \n                    setPostSize(response.data.postSize)\n                } else {\n                    alert(\"상품 가져오기 실패\")\n                }\n            })\n    }\n\n\n    const loadMoreHandler = () => {\n        \n        let skip = Skip + Limit\n\n\n        let body = {\n            skip: skip,\n            limit: Limit,\n            loadMore: true\n        }\n\n        getProducts(body)\n        setSkip(skip)\n    }\n    const renderCards = Products.map((product, index) =>{\n        // console.log('product', product)\n        // console.log('product', index)\n\n        //lg 화면 가장 클때 6*4 /md 중간사이즈 8*3 /xs 가장작을때 24*1\n        return <Col lg={4} md={8} xs={24} key={index} >\n         <Card\n//product/productid로 링크생성\n        cover={<a href={`/product/${product._id}`}> <ImageSlider images={product.images} /></a>  }\n        >\n        <Meta \n            title={product.title}\n            description={`₩${product.price}`}\n        />\n        </Card>\n        </Col>\n        \n       \n\n    })\n\n\n    const showFilterResults = (filters) => {\n        let body = {\n            skip: 0,\n            limit: Limit,\n            filters: filters\n        }\n        getProducts(body)\n        setSkip(0)\n    }\n\n    \n    const handlePrice = (value) => {\n        const data = price; //price 정보\n        let array = [];\n\n        for(let key in data) {\n            if(data[key]._id === parseInt(value,10)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    }\n\n\n    const handleFilters = (filters, category) => { \n        const newFilters = { ...Filters }\n        newFilters[category] = filters //checkbox에서 1,2,3 선택시 여기로 들어옴, Filter - continents: [1,2,3]로 \n        console.log(newFilters)\n\n        if (category === \"price\") {\n            let priceValues = handlePrice(filters)\n            newFilters[category] = priceValues \n        }\n\n\n        showFilterResults(newFilters)\n        setFilters(newFilters)\n    }\n\n    const updateSearchTerm = (newSearchTerm) => {\n        setSearchTerm(newSearchTerm) //searchFeature에서 있던값 update\n\n        let body = {\n            skip: 0, //db처음부터 긁어옴\n            limit: Limit,\n            filters: Filters,\n            searchTerm: newSearchTerm\n\n        }\n\n        setSkip(0)\n        setSearchTerm(newSearchTerm)\n        getProducts(body)\n    }\n\n    return (\n        <div style={{ width: '75%', margin: '3rem auto' }}>\n\n            { /*Filter */}\n\n            <Row gutter={[16, 16]}>\n            <Card size=\"small\" title=\"브랜드\" \n                headStyle={{ backgroundColor: \"#F7F2E0\"}}  defaultActiveKey={['0']} >\n                    \n                        <Checkbox list={brand}\n                        handleFilters={filters => handleFilters(filters, \"brand\")}/>            \n                    \n                </Card>\n                <Collapse defaultActiveKey={['0']} >\n                    <Panel header=\"급여대상\" key=\"1\">\n                        <Checkbox list={age}\n                        handleFilters={filters => handleFilters(filters, \"age\")}/>            \n                    </Panel>\n                </Collapse>\n                <Collapse defaultActiveKey={['0']} >\n                    <Panel header=\"가격\" key=\"1\">\n                        <Radiobox list={price}\n                        handleFilters={filters => handleFilters(filters, \"price\")}/>          \n                    </Panel>\n                </Collapse>\n            </Row>\n\n                \n\n           \n            { /*Search */}\n            <div style={{ \n                display: 'flex',\n                justifyContent: 'flex_end',\n                margin: '1rem auto'}}>\n                <SearchFeature \n                    refreshFunction={updateSearchTerm}\n                \n                />\n            </div>\n            \n\n            { /*Cards */}\n\n            \n            <Row gutter={[16,16]}>\n            {renderCards}\n\n\n            </Row>\n\n            <br />\n\n            {PostSize >= Limit &&  // postsize가 limit보다 클 때 더보기란\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <button onClick={loadMoreHandler}>더보기</button>\n                </div>            \n            }\n        </div>\n    )\n}\n\nexport default ProductPage","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialId = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        id: initialId,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        id: Yup.string()\n          .required('Id is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            id: values.id,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"id\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your id\"\n                  type=\"text\"\n                  value={values.id}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.id && touched.id ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.id && touched.id && (\n                  <div className=\"input-feedback\">{errors.id}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React, {useState} from 'react'\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n  Divider\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\n// 견종 정의 => 아직 안함\nconst Dog_breed_all = [\n  { key: 1, value: \"1\" },\n    { key: 2, value: \"2\" },\n    { key: 3, value: \"3\" },\n    { key: 4, value: \"4\" },\n    { key: 5, value: \"5\" }\n]\n\n// 연령 정의\nconst Dog_age_all = [\n  { key: 1, value: \"1개월 이상 1세 미만\" },\n  { key: 2, value: \"1세 이상 7세 미만\" },\n  { key: 3, value: \"7세 이상\" }\n]\n\n// 체중 정의\nconst Dog_weight_all = [\n  { key: 1, value: \"4.5kg 미만\" },\n  { key: 2, value: \"4.5kg~10kg\" },\n  { key: 3, value: \"10kg~25kg\" },\n  { key: 4, value: \"25kg 이상\" }\n]\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n\n  //견종\n  const [Dog_breed, setDog_breed] = useState(1) \n  const Dog_breedChangeHandler = (event) => { \n    setDog_breed(event.currentTarget.value) \n  }\n  \n  //연령\n  const [Dog_age, setDog_age] = useState(1) \n  const Dog_ageChangeHandler = (event) => { \n    setDog_age(event.currentTarget.value) \n  }\n\n  //체중\n  const [Dog_weight, setDog_weight] = useState(1) \n  const Dog_weightChangeHandler = (event) => { \n    setDog_weight(event.currentTarget.value) \n  }\n\n  return (\n\n    <Formik //ID, PW, 이름, 이메일, 주소, 핸폰\n      initialValues={{\n        id: '',\n        password: '',\n        confirmPassword: '',\n        name: '',\n        email: '',\n        address: '',\n        phone: '',\n\n        // 강아지 정보\n        dog_breed: '',\n        dog_age: '',\n        dog_weight: ''\n      }}\n\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n\n        //////\n        address: Yup.string()\n          .required('address is required'),\n        phone: Yup.string()\n          .required('phone is required'),  \n\n        ////////  \n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            id: values.id,\n            password: values.password,\n            name: values.name,\n            email: values.email,\n            phone: values.phone,\n            address: values.address,\n\n            dog_breed: Dog_breed,\n            dog_age: Dog_age,            \n            dog_weight: Dog_weight\n              \n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n\n        return (\n          <div className=\"app\">\n            <h2>회원가입</h2>\n            \n            <Form style={{ minWidth: '375px'}} {...formItemLayout} onSubmit={handleSubmit} >\n\n            <Form.Item required label=\"아이디\" \n              hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"id\"\n                  placeholder=\"Enter your id\"\n                  type=\"text\"\n                  value={values.id}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.id && touched.id ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.id && touched.id && (\n                  <div className=\"input-feedback\">{errors.id}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"비밀번호\" \n              hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"비밀번호 재확인\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"이름\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"이메일\" \n             //</Form> hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}\n             >\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"휴대전화\">\n                <Input\n                  id=\"phone\"\n                  placeholder=\"Enter your phone\"\n                  type=\"text\"\n                  value={values.phone}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.phone && touched.phone ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.phone && touched.phone && (\n                  <div className=\"input-feedback\">{errors.phone}</div>\n                )}\n              </Form.Item>\n            \n              <Form.Item required label=\"주소\">\n                <Input\n                  id=\"address\"\n                  placeholder=\"Enter your address\"\n                  type=\"text\"\n                  value={values.address}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.address && touched.address ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.address && touched.address && (\n                  <div className=\"input-feedback\">{errors.address}</div>\n                )}\n              </Form.Item>      \n\n              <Divider />\n              <h2 >추가 정보</h2>     \n\n              <Form.Item required label=\"견종\">\n                <select onChange= \n                {Dog_breedChangeHandler} value={Dog_breed}>\n                    {Dog_breed_all.map(item => (\n                    <option key={item.key} value={item.key}> {item.value}</option>\n                    ))}                 \n                </select>\n                \n              </Form.Item>   \n\n              <Form.Item required label=\"연령\">\n                <select onChange=\n                {Dog_ageChangeHandler} value={Dog_age}>\n                    {Dog_age_all.map(item => (\n                    <option key={item.key} value={item.key}> {item.value}</option>\n                    ))}                 \n                </select>\n                \n              </Form.Item>   \n\n              <Form.Item required label=\"체중\">\n                <select onChange= \n                {Dog_weightChangeHandler} value={Dog_weight}>\n                    {Dog_weight_all.map(item => (\n                    <option key={item.key} value={item.key}> {item.value}</option>\n                    ))}                 \n                </select>\n                \n              </Form.Item>  \n       \n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n    <Menu.Item key=\"mail\">\n    </Menu.Item>\n\n    <SubMenu title={<span>랭킹</span>} />\n\n    <SubMenu title={<a href=\"/product\">상품</a>}>\n    \n      <MenuItemGroup title=\"브랜드\">\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n      </MenuItemGroup>\n      <MenuItemGroup title=\"급여대상\">\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n      </MenuItemGroup>\n      <MenuItemGroup title=\"기능\">\n        <Menu.Item key=\"setting:5\">Option 3</Menu.Item>\n        <Menu.Item key=\"setting:6\">Option 4</Menu.Item>\n      </MenuItemGroup>\n    </SubMenu>\n\n    <SubMenu title={<span>추천</span>} />\n    \n    <SubMenu title={<span>FAQ</span>} />\n      \n\n\n  </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu, Icon, Badge } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user);\n\n\n  // const logoutHandler = () => {\n  //   axios.get(`${USER_SERVER}/logout`).then(response => {\n  //     if (response.status === 200) {\n  //       props.history.push(\"/login\");\n  //     } else {\n  //       alert('Log Out Failed')\n  //     }\n  //   });\n  // };\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`, {params: {userId: localStorage.getItem('userId')}}).then(response => {\n      if (response.status === 200) {\n        localStorage.removeItem('userId');\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  \n\nif (user.userData && !user.userData.isAuth) { //비로그인\n  return (\n    <Menu mode={props.mode}> \n    <Menu.Item key=\"mail\"> \n      <a href=\"/login\">로그인</a>\n    </Menu.Item>\n    <Menu.Item key=\"app\">\n      <a href=\"/register\">회원가입</a>\n    </Menu.Item>\n  </Menu>\n  )\n} \nelse { //로그인\n    if(user.userData && !user.userData.isAdmin) { //회원\n      return (\n        <Menu mode={props.mode}>\n\n\n          <Menu.Item key=\"cart\" //카트\n          style={{ paddingBottom: 3 }}>\n            <Badge  >\n              <a href=\"/user/cart\" className=\"head-example\"\n              style = {{ marginRight:-22, color: '#667777'}}>\n                <Icon type=\"shopping-cart\" style={{ fontSize: 30, marginBottom: 3 }} />\n                </a>\n            </Badge>          \n          </Menu.Item>\n\n                    \n        <Menu.Item key=\"mypage\">\n        <a href=\"/user\">mypage</a>\n        </Menu.Item>\n\n\n\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>로그아웃</a>\n        </Menu.Item>\n\n      </Menu>\n      \n    )\n  }\n  else { //관리자\n    return (\n      <Menu mode={props.mode}>\n\n        <Menu.Item key=\"upload\" //업로드페이지\n        >\n          <a href=\"/product/upload\">AdminPage</a>\n        </Menu.Item>\n\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>로그아웃</a>\n        </Menu.Item>\n\n      </Menu>\n\n    )\n  }\n}\n\n}\n\n\n\nexport default withRouter(RightMenu);\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">For My Puppy</a>\n      </div>\n      \n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, {useState} from 'react'\nimport Dropzone from 'react-dropzone';\nimport {Icon} from 'antd';\nimport axios from 'axios';\n\n\nfunction FileUpload(props) {\n\n    const [Images, setImages] = useState([]);\n\n    const dropHandler = (files) => {\n        let formData = new FormData();\n        \n        const config = { //정보 보내기, 백엔드에서 request받을때 에러없이\n            header: {'content-type': 'multipart/form-data'}\n        }\n        formData.append(\"file\", files[0]) //올리는 파일정보\n        \n        axios.post('/api/product/image', formData, config )\n        .then(response => { //받아온 정보 \n            if(response.data.success){\n                console.log(response.data)\n                //useState이용해서 이미지 배열['','',... ] 받아옴\n                setImages([...Images, response.data.filePath])\n                props.refreshFunction([...Images, response.data.filePath])\n           //부모 컴포넌트로 올라와서 images에 담기게됨\n            } else {\n                alert(\"파일을 저장하는데 실패하였습니다.\")\n            }\n        }) \n    }\n\n    const deleteHandler = (image) => {\n\n        const currentIndex = Images.indexOf(image)\n        \n        let newImages = [...Images]\n        newImages.splice(currentIndex, 1)\n\n        setImages(newImages)\n        props.refreshFunction(newImages)\n    }\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Dropzone onDrop={dropHandler}>\n        {({getRootProps, getInputProps}) => (\n            <div style={{ width: 300, height: 240, border: '1px solid lightgray',\n                          display: 'flex', alignItems: 'center', justifyContent: 'center'  \n                        }}       \n                {...getRootProps()}>\n                <input {...getInputProps()} />\n                <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\n            </div>\n        )}\n        </Dropzone>\n        <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\n            {Images.map((image, index) =>(\n                <div onClick={() => deleteHandler(image)} key={index}>\n                    <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\n                        src={`http://localhost:5000/${image}`} //src={`http://localhost:5000/${image.filePath}`}\n                        //아니 ''이거 안쓰고 저거썼다고 오류 사라짐;;;;; 개빡침\n            \n                    />\n                </div>\n            ))}\n\n\n        </div>\n        \n\n    </div>\n  )\n}\n\nexport default FileUpload","//Upload 페이지 - 상품명, 가격, 브랜드, 급여대상, 기능 \n\nimport React, {useState} from 'react'\nimport {Typography, Button, Form, Input, Checkbox} from 'antd'; \nimport axios from 'axios';\n\nimport FileUpload from '../../utils/FileUpload';\n\nconst CheckboxGroup = Checkbox.Group;\n\nconst { Title } = Typography;\nconst { TextArea } = Input;\n\n//브랜드 정의\nconst Brands = [\n    { key: 1, value: \"NOW\" }, { key: 2, value: \"로얄캐닌\" },\n    { key: 3, value: \"ANF\" }, { key: 4, value: \"오리젠\" },\n    { key: 5, value: \"네츄럴코어\" }, { key: 6, value: \"마이펫닥터\" },\n    { key: 7, value: \"아카나\" }, { key: 8, value: \"하림펫푸드\" },\n    { key: 9, value: \"내추럴발란스\" }, { key: 10, value: \"듀먼\" }\n]\n\n//급여대상\nconst Ages = [\n    { key: 1, value: \"퍼피\" },\n    { key: 2, value: \"어덜트\" },    \n    { key: 3, value: \"시니어\" },\n    { key: 4, value: \"대형견\" },    \n    { key: 5, value: \"임신/수유\" },\n    { key: 6, value: \"전연령견\" }\n]\n\n//기능    \nconst Functions = [\n    { key: 1, value: \"다이어트/중성화\" },\n    { key: 2, value: \"인도어피\" },\n    { key: 3, value: \"저알러지\" },\n    { key: 4, value: \"피부/털개선\" },\n    { key: 5, value: \"눈물개선/눈건강\" },\n    { key: 6, value: \"비뇨계\" },\n    { key: 7, value: \"뼈/관절강화\" },\n    { key: 8, value: \"퍼포먼스\" },\n    { key: 9, value: \"냄새제거\" },\n    { key: 10, value: \"치석제거/구강관리\" },\n    { key: 11, value: \"면역력강화\" },\n    { key: 12, value: \"영양공급\" },\n    { key: 13, value: \"처방식\" }\n]\n\nfunction UploadProductPage(props) {\n\n    // 이름\n    const [Title, setTitle] = useState(\"\") \n    const titleChangeHandler = (event) => { \n        setTitle(event.currentTarget.value) \n    }\n\n    // 설명\n    const [Description, setDescription] = useState(\"\")\n    const descriptionChangeHandler = (event) => { \n        setDescription(event.currentTarget.value) \n    }\n\n    // 가격\n    const [Price, setPrice] = useState()  //0부터 시작\n    const priceChangeHandler = (event) => { \n        setPrice(event.currentTarget.value) \n    }\n\n        // 이미지\n    const [Images, setImages] = useState([]) // array로 줌  \n    const updateImages = (newImages) => {\n        setImages(newImages) //이미지가 변경될 때마다 서버에 정보 전달\n    }\n    \n\n    // 브랜드\n    const [Brand, setBrand] = useState(1)  \n    const BrandChangeHandler = (event) => { \n        setBrand(event.currentTarget.value) \n    }\n\n    // 연령\n    const [Age, setAge] = useState(1)  \n    const AgeChangeHandler = (event) => { \n        setAge(event.currentTarget.value) \n    }\n\n    // 기능  \n    const [isChecked, setisChecked] = useState(false);\n    const [checkedItems, setcheckedItems] = useState(new Set()); //\n\n    const checkHandler = ({ target }) => {\n        setisChecked(!isChecked);\n        checkedItemHandler(target.parentNode, target.value, target.checked);\n    }\n\n    const checkedItemHandler = (box, id, isChecked) => {\n        if(isChecked) {\n            checkedItems.add(id);\n            setcheckedItems(checkedItems);\n        }\n        else if (!isChecked && checkedItems.has(id)) {\n            checkedItems.delete(id);\n            setcheckedItems(checkedItems);\n        }\n\n        return checkedItems;\n    }\n\n\n    const submitHandler = (event) => { \n        event.preventDefault();\n\n        if(!Title || !Price  || !Brand || !Age || !Images ) //모든 것이 채워지지 않으면 수행되지 않도록 설정\n        {\n            return alert(\"모든 값을 넣어주셔야 합니다.\")\n        }\n\n  \n        //서버에 채운 값들을 request로 보낸다.\n        const body = {\n            writer: props.user.userData._id,\n            title: Title, \n            price: Price,\n            brand: Brand,\n            age: Age,\n            description: Description,\n            function: [...checkedItems],\n            images: Images\n        }\n\n        axios.post(\"/api/product/uploadProduct\", body)\n            .then(response => {// 백엔드 결과값을 response 변수에 넣어줌\n                if(response.data.success) { // 성공하면\n                    alert('상품업로드 성공')\n                    props.history.push('/')\n                } else { //실패하면\n                    alert('상품업로드 실패')\n                }\n            })\n    }\n\n return (\n    <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n        <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n            <h2>상품 업로드</h2> \n        </div>\n\n        <Form onSubmitCapture={submitHandler}>\n        <div style={{ textAlign: 'right', marginBottom: '2rem' }}>\n            <FileUpload refreshFunction = {updateImages} />\n            \n        </div>  \n        <div style={{ \n            textAlign: 'left', \n            marginBottom: '2rem' ,         \n            width: '350px', \n            //height: '700px',  overflowX: 'scroll' \n        }}>\n        \n        <br />\n            <br />\n            <label>상품명</label>\n            <Input onChange={titleChangeHandler} value={Title} /> \n            <br />\n            <br />\n            <label>가격</label>\n            <Input type=\"number\" onChange={priceChangeHandler} value={Price}/>\n            <br />\n            <br />            \n            <label>브랜드</label>\n            <br />\n            <select onChange = {BrandChangeHandler} value={Brand}>\n                {Brands.map(item => (\n                <option key={item.key} value={item.key}> {item.value}</option>\n                ))} \n                \n            </select>\n            <br />\n            <br />\n            <label>급여대상</label> \n            <br />\n            <select onChange = {AgeChangeHandler} value={Age}>\n                {Ages.map(item => (\n                <option key={item.key} value={item.key}> {item.value}</option>\n                ))}  \n            </select>\n            <br />\n            <br />               \n            <label>기능</label> \n            <br />\n            <div className=\"contStyle\" >\n                {Functions.map((item) => (\n                    <label key={item.key} >\n                        <input\n                        type = \"checkbox\"\n                        value={item.key}\n                        onChange={(e) => checkHandler(e) }\n                        />\n                     {item.value} <br />\n                     \n                     </label>\n                    ))}\n                </div>\n            <br />\n            <label>설명</label>\n            <TextArea onChange={descriptionChangeHandler} value={Description}/>\n            <br />\n\n            <br />\n            \n        </div>       \n            \n          \n        <div style={{ textAlign: 'right', marginBottom: '2rem' }}>    \n            <Button htmlType = \"submit\">\n                확인\n            </Button></div>  \n        </Form>\n    </div>\n  )\n\n}\n\nexport {\n    Brands,\n    Ages,\n    Functions\n\n}\n        \n\nexport default UploadProductPage","import React, {useState, useEffect} from 'react'\nimport ImageGallery from 'react-image-gallery'\n\nfunction ProductImage(props) {\n    const [Images, setImages] = useState([])\n\n    useEffect(() => {\n        if(props.detail.images && props.detail.images.length > 0){\n            let images = []\n\n            props.detail.images.map(item => {\n                images.push({ //동적으로 처리해줘야함, 포트번호등등 \n                    original: `http://localhost:5000/${item}`,\n                    thumbnail: `http://localhost:5000/${item}`\n                })\n            })\n\n            setImages(images)\n        }\n\n    }, [props.detail]) //[]비어있는경우, 렌더링후 useeffect 작동 후  []에 아무것도 들어있지않음, \n    //하지만 앞에서 propsdetail이 바뀌기 때문에 다시 가져와서/작동해서 Images에 들어감 -> 이미지 나옴\n    \n  return (\n    <div>\n        <ImageGallery\n        // originalHeight = '100'\n        // originalWidth = '100'\n        // sizes = '20'\n        items={Images}/>\n    </div>\n  )\n}\n\nexport default ProductImage","import React from 'react'\nimport {Button, Descriptions} from 'antd';\nimport { useDispatch } from 'react-redux';\nimport {addToCart} from '../../../../_actions/user_actions';\nimport { Brands,  Ages, Functions } from '../../UploadProductPage/UploadProductPage' \n\nfunction ProductInfo(props) {\n\n    const dispatch = useDispatch()\n\n    const clickHandler = () => {\n        //필요한 정보를 Cart 필드에 넣어준다\n        dispatch(addToCart(props.detail._id))\n    }\n\n    let fun = \"\";\n\n    const brand = Brands.map((item) => {\n        \n        if( item.key === parseInt(props.detail.brand) ){\n            //console.log(item.key)\n            return item.value\n        }\n    })\n\n    const age = Ages.map((item) => {\n        \n        if( item.key === parseInt(props.detail.age) ){\n            return item.value\n        }\n    })\n\n   \n    Functions.map((item) => {\n\n        for(let i in props.detail.function) {\n            if(item.key === parseInt(props.detail.function[i])) {\n                fun += item.value + \" \"\n            }\n        }\n        \n    })\n    // console.log(props.detail)\n\n\n\n\n  return (\n    <div> \n        <Descriptions title={props.detail.title} bordered> \n            <Descriptions.Item label=\"가격\"  span={2}>{props.detail.price}</Descriptions.Item>\n            <Descriptions.Item label=\"브랜드\" span={2}>{brand}</Descriptions.Item>\n            <Descriptions.Item label=\"기능\" span={4}>{fun}</Descriptions.Item>\n            <Descriptions.Item label=\"급여대상\" span={4}>{age}</Descriptions.Item>\n            <Descriptions.Item label=\"설명\" span={4}>{props.detail.description}</Descriptions.Item>\n        </Descriptions>\n            <br />\n            <br />\n            <br />\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Button size='large' shape=\"round\"  onClick={clickHandler}>\n                    바로구매\n                </Button>\n                \n                \n            </div>\n            \n\n\n    </div>\n  )\n}\n\nexport default ProductInfo","import React from 'react'\nimport {Comment, Tooltip, Rate} from 'antd';\nimport moment from 'moment';\n\nfunction ProductReview(props) { //product로 보내주고있음\n\n\n  return (\n\n    <div>\n    <Rate disabled defaultValue={props.detail.rate} />\n    <Comment\n    author={\"구매자\"}\n    content={ props.detail.content }\n    datetime={\n        <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n        <span>{moment().fromNow()}</span>\n        </Tooltip>\n    }\n    />\n   \n    </div>\n    \n  )\n}\n\nexport default ProductReview","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport ProductImage from './Sections/ProductImage';\nimport ProductInfo from './Sections/ProductInfo';\nimport ProductReview from './Sections/ProductReview';\nimport { Row, Col, Divider, Pagination} from 'antd';\nimport \"antd/dist/antd.css\";\n\nimport product from '../../../images/product.jpg'\n\nfunction DetailProductPage(props) {\n\n    \n    const productId = props.match.params.productId\n\n    const [Product, setProduct] = useState({})\n    const [Review, setReview] = useState([])\n\n\n\n    useEffect(()=>{\n\n\n        axios.get(`/api/product/products_by_id?id=${productId}&type=single`)\n        .then(response => {\n            setProduct(response.data[0]) //product 정보 Product에 들어감\n            setReview(response.data[0]['review'])\n            /*\n            if(response.data.success) {\n                if(response.data.success){\n                    console.log(\"response.data\", response.data)\n                    setProduct(response.data.product[0]) //product 정보 Product에 들어감\n                } else {\n                    alert(\"상세정보 가져오기 실패\")\n                }\n            }\n            */\n        })\n        \n        .catch(err => alert(err))\n    }, [])\n\n\n    const pageSize = 5;\n    let [State, setState] = useState({\n        data: Review,\n        totalPage: Review.length / pageSize, //2\n        minIndex: 0,\n        maxIndex: pageSize,\n        current: 1,\n      });\n\n\n    const handleChange = (page) => {\n        setState({\n          current: page,\n          minIndex: (page - 1) * pageSize,\n          maxIndex: page * pageSize\n        });\n      };\n    \n\n\n    return (\n        //, paddingLeft: '150px', paddingRight: '150px' \n    <div style={{ width: '100%', padding: '3rem 4rem'}}>\n        {/* <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <h1>{Product.title}</h1>\n        </div>\n        <br /> */}\n        <br />\n\n        <Row gutter={[16, 16]} >\n            <Col lg={{ span: 6, offset: 4 }} sm={24}> \n\n                {/* productImage */}\n                <ProductImage detail={Product}/>\n            </Col>\n            \n            <Col lg={{ span: 8, offset: 2 }} sm={24}> \n\n                {/* productInfo */}\n                <ProductInfo detail={Product} />\n            </Col>\n        </Row>\n\n\n        <br />\n        <br />\n        {/* <Divider></Divider> */}\n        {/* 상품정보,설명 */}\n       \n        <Row gutter={[16, 16]} >\n\n            <Col lg={{ span: 16, offset: 8 }} sm={{span: 16, offset: 3 }}> \n                {/* <p className=\"image\">\n                    <img src={product} alt=\"상품설명\" ></img>\n                </p> */}\n\n            </Col>\n            \n        </Row>\n\n\n\n        {/* 리뷰 */}\n        \n        <Row gutter={[16, 16]}>\n            <Col lg={{ span: 16, offset: 4 }} sm={24}> \n            <Divider orientation=\"left\">구매 후기</Divider>\n            {/* productReview */}\n            {/* 5개씩 나타나게 */}\n    \n            {Review.map((review, index) => {\n            return (\n                index >= State.minIndex &&  index < State.maxIndex &&\n                <ProductReview key={index} detail={review} />\n            )\n\n        })}\n\n            <Pagination defaultCurrent={1}\n             pageSize={pageSize}\n             current={State.current}\n             total={Review.length}\n             onChange={handleChange}\n             style={{ bottom: \"0px\" }}\n            />\n         </Col>\n\n\n        </Row>\n\n    </div>\n  )\n}\n\nexport default DetailProductPage","import React from 'react'\nimport \"./UserCardBlock.css\"\n\n\nfunction UserCardBlock(props) {\n\n    const renderCartImage = (images) => {\n        if(images.length > 0) {\n            let image = images[0]\n            return `http://localhost:5000/${image}`\n        }\n    }\n\n    const renderItems = () => (\n        props.products && props.products.map((product, index) => (\n            <tr key={index}>\n                <td //Product Image\n                >\n                    <img style={{ width: '70px' }} alt=\"product\"\n                    src={renderCartImage(product.images)} />\n                </td>\n                <td>\n                    {product.quantity} 개\n                </td>\n                <td>\n                    {product.price} 원\n                </td>\n                <td>\n                    <button onClick={() => props.removeItem(product._id)}>\n                        Remove\n                    </button>\n                </td>\n                <td>\n                    <button>\n                        Review\n                    </button>\n                </td>\n            </tr>\n        ))\n    )\n\n  return (\n\n\n    <div>\n      <table>\n          <thead>\n              <tr>\n                  <th>이미지</th>\n                  <th>상품 수량</th>\n                  <th>상품 가격</th>\n                  <th>삭제</th>\n                  <th>리뷰 작성</th>\n                  \n\n              </tr>\n\n          </thead>\n\n          <tbody>\n              {renderItems()}\n          </tbody>\n      </table>\n    </div>\n\n  )\n}\n\nexport default UserCardBlock","//import { response } from 'express';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { getCartItems, removeCartItem } from '../../../_actions/user_actions'\nimport UserCardBlock from './Sections/UserCardBlock';\nimport { Empty, Row , Col } from 'antd';\n\nfunction CartPage(props) {\n\n    const dispatch = useDispatch();\n\n    const [Total, setTotal] = useState(0)\n    const [ShowTotal, setShowTotal] = useState(false)\n\n\n    useEffect(() => {\n\n        let cartItems = []\n\n        // 리덕스 user state 안에 cart 안에 상품이 있는지 확인\n        if(props.user.userData && props.user.userData.cart) {\n            if(props.user.userData.cart.length > 0) {\n                props.user.userData.cart.forEach(item => {\n                    cartItems.push(item.id)\n                })\n                dispatch(getCartItems(cartItems, props.user.userData.cart))\n                    .then(response => { calculateTotal(response.payload) })\n              }\n              \n\n        }\n\n    }, [props.user.userData])\n\n\n    let calculateTotal = (cartDetail) => {\n        let total = 0;\n\n        cartDetail.map(item => {\n            total += parseInt(item.price,10) * item.quantity\n        })\n\n        setTotal(total)\n        setShowTotal(true)\n        \n    }\n\n    let removeFromCart = (productId) => {\n\n        dispatch(removeCartItem(productId))\n            .then(response => {\n                if (response.payload.productInfo.length <= 0) { // 상품이 없으면\n                    setShowTotal(false)\n                }\n\n        })\n\n    }\n\n\n\n\n    return (\n      <Row gutter={[16,16]}>\n        <Col lg={{ span: 16, offset: 4 }} sm={24}> \n\n\n\n        <div style={{ width:'85', margin: '3rem auto' }}>\n            <h1>My Cart</h1>\n            <div>\n                <UserCardBlock \n                products={props.user.cartDetail}\n                removeItem = {removeFromCart}/>\n            </div>\n\n            {ShowTotal ?\n                <div style={{marginTop: '3rem'}}>\n                    <h2> 총 상품금액: {Total}원 </h2>\n\n                </div>\n                :\n                <>\n                <br />\n                <Empty description={false} />\n                </>\n        \n        }\n            \n        </div>\n        \n            </Col>\n        </Row>\n    )\n}\n\nexport default CartPage","import React from 'react'\n\nfunction LandingPage() {\n  return (\n    <div>LandingPage</div>\n  )\n}\n\nexport default LandingPage","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport ProductPage from \"./views/ProductPage/ProductPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\nimport UploadProductPage from './views/UploadProductPage/UploadProductPage';\nimport DetailProductPage from './views/DetailProductPage/DetailProductPage';\nimport CartPage from './views/CartPage/CartPage';\nimport LandingPage from './views/LandingPage/LandingPage'\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '100px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/product\" component={Auth(ProductPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} /> \n          <Route exact path=\"/product/upload\" component={Auth(UploadProductPage, true)} />\n          <Route exact path=\"/product/:productId\" component={Auth(DetailProductPage, null)} />\n          <Route exact path=\"/user/cart\" component={Auth(CartPage, true)} />\n\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART,\n    GET_CART_ITEMS,\n    REMOVE_CART_ITEM\n} from '../_actions/types';\n\n\n\nexport default function(state={},action){ \n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload } \n        case LOGOUT_USER:\n            return {...state }\n        case ADD_TO_CART:\n                return {\n                    ...state,\n                    userData: {\n                            ...state.userData,\n                            cart: action.payload //카트정보\n                        }  \n                    }\n        case GET_CART_ITEMS: \n            return { ...state, cartDetail: action.payload }\n\n        case REMOVE_CART_ITEM: \n            return { \n                ...state, cartDetail: action.payload.productInfo,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart\n                }            \n            }        \n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = \"csrftoken\"; //\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\"; //\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}